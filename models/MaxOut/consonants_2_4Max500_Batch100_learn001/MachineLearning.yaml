!obj:pylearn2.train.Train {

    dataset: &train !obj:pylearn2.datasets.timitConsonants9Frames_MFCC.timit.TIMIT {
        classes_number: 32,
        which_set : 'train'
    },
    model: !obj:pylearn2.models.mlp.MLP {
        layers: [
                 !obj:pylearn2.models.maxout.Maxout {
                     layer_name: 'h0',
                     num_units: 500,
                     num_pieces: 10,
                     irange: .005,
                     max_col_norm: 1.9365,
                 },
                 !obj:pylearn2.models.maxout.Maxout {
                     layer_name: 'h1',
                     num_units: 500,
                     num_pieces: 10,
                     irange: .005,
                     max_col_norm: 1.9365,
                 },
                 !obj:pylearn2.models.maxout.Maxout {
                     layer_name: 'h2',
                     num_units: 500,
                     num_pieces: 10,
                     irange: .005,
                     max_col_norm: 1.9365,
                 },
                 !obj:pylearn2.models.maxout.Maxout {
                     layer_name: 'h3',
                     num_units: 500,
                     num_pieces: 10,
                     irange: .005,
                     max_col_norm: 1.9365,
                 },
                 !obj:pylearn2.models.mlp.Softmax {
                     max_col_norm: 1.9365,
                     layer_name: 'y',
                     n_classes: 32,
                     irange: .005
                 }
                ],
        nvis: 468,
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        batch_size: 100,
        learning_rate: .1,
        monitoring_dataset:
            {
                'train' : *train,
                'valid'  : !obj:pylearn2.datasets.timitConsonants9Frames_MFCC.timit.TIMIT {
                              which_set : 'valid',
                              classes_number: 32
                          },
            },
        learning_rule: !obj:pylearn2.training_algorithms.learning_rule.Momentum {
            init_momentum: .5
        },
        cost: !obj:pylearn2.costs.mlp.dropout.Dropout {
            input_include_probs: { 'h0' : .8 },
            input_scales: { 'h0': 1. }
        },
        termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased {
            channel_name: "valid_y_misclass",
            prop_decrease: 0.001,
            N: 10
        },
        update_callbacks: !obj:pylearn2.training_algorithms.sgd.ExponentialDecay {
            decay_factor: 1.000004,
            min_lr: .000001
        }
    },
    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'valid_y_misclass',
             save_path: "/home/gortolan/MachineLearning/ML_Consonants_MaxOut/timit_model_best.pkl"
        },
        !obj:pylearn2.training_algorithms.learning_rule.MomentumAdjustor {
            start: 1,
            saturate: 250,
            final_momentum: .7
        },
    ],
    save_path: "/home/gortolan/MachineLearning/ML_Consonants_MaxOut/timit_model.pkl",
    save_freq: 1
}